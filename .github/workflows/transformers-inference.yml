name: Transformers NPU Inference
run-name: Transformers NPU Inference

on:
  workflow_run:
    workflows: [Transformers NPU Build]
    types:
      - completed

env:
  HF_HOME: /root/models

jobs:
  inference_verification:
    runs-on: test
    strategy:
      matrix:
        machine_type: [single-npu, multi-npu]
    container: 
      image: zhangsibo1129/ubuntu-cann-torch21-py39-sibo:latest
      volumes:
        - /usr/local/dcmi:/usr/local/dcmi
        - /usr/local/bin/npu-smi:/usr/local/bin/npu-smi
        - /usr/local/Ascend/driver/lib64:/usr/local/Ascend/driver/lib64
        - /usr/local/Ascend/driver/version.info:/usr/local/Ascend/driver/version.info
        - /data/disk3/action/repo:/__w/hf-ci-demo/hf-ci-demo
        - /data/disk3/action/models:/root/models
        - /data/disk3/action/data/torch_npu:/root/miniconda/envs/torch_npu
      options: --network host
              --device /dev/davinci_manager
              --device /dev/devmm_svm
              --device /dev/hisi_hdc
              --device /dev/davinci6
              ${{ matrix.machine_type == 'multi-npu' && '--device /dev/davinci7' || ''}}
    steps:
      - name: Pipeline Verification
        run: |
          python << EOF
          if __name__ == '__main__':
              from transformers import pipeline, set_seed
              generator = pipeline('text-generation', model='sshleifer/tiny-gpt2', device='npu:0')
              print(f"Device: {generator.model.device}")
              set_seed(42)
              results = generator("Hello, I'm a language model,", max_length=30, num_return_sequences=5)
              print(results)
          EOF
